node {
  name: "Placeholder/feature"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 725
        }
      }
    }
  }
}
node {
  name: "Placeholder/lstm_cell"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Placeholder/lstm_hidden"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\325\002\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "Placeholder/feature"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\325\002\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "Reshape"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_vec"
  op: "Identity"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\020\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "Placeholder/lstm_cell"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\020\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "Placeholder/lstm_hidden"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_vec_split/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\344\001\000\000\220\000\000\000H\000\000\000\031\000\000\000"
      }
    }
  }
}
node {
  name: "feature_vec_split/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split"
  op: "SplitV"
  input: "feature_vec"
  input: "feature_vec_split/Const"
  input: "feature_vec_split/split/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "feature_vec_split/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\353\000\000\000\353\000\000\000\016\000\000\000"
      }
    }
  }
}
node {
  name: "feature_vec_split/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_1"
  op: "SplitV"
  input: "feature_vec_split/split"
  input: "feature_vec_split/Const_1"
  input: "feature_vec_split/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "feature_vec_split/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "H\000\000\000H\000\000\000"
      }
    }
  }
}
node {
  name: "feature_vec_split/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_2"
  op: "SplitV"
  input: "feature_vec_split/split:1"
  input: "feature_vec_split/Const_2"
  input: "feature_vec_split/split_2/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "feature_vec_split/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "$\000\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "feature_vec_split/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_3"
  op: "SplitV"
  input: "feature_vec_split/split:2"
  input: "feature_vec_split/Const_3"
  input: "feature_vec_split/split_3/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "feature_vec_split/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\022\000\000\000\022\000\000\000\022\000\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "feature_vec_split/split_4/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_4"
  op: "SplitV"
  input: "feature_vec_split/split_2"
  input: "feature_vec_split/Const_4"
  input: "feature_vec_split/split_4/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "feature_vec_split/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\022\000\000\000\022\000\000\000\022\000\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "feature_vec_split/split_5/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_5"
  op: "SplitV"
  input: "feature_vec_split/split_2:1"
  input: "feature_vec_split/Const_5"
  input: "feature_vec_split/split_5/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "feature_vec_split/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\022\000\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "feature_vec_split/split_6/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_6"
  op: "SplitV"
  input: "feature_vec_split/split_3"
  input: "feature_vec_split/Const_6"
  input: "feature_vec_split/split_6/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "feature_vec_split/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\022\000\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "feature_vec_split/split_7/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_7"
  op: "SplitV"
  input: "feature_vec_split/split_3:1"
  input: "feature_vec_split/Const_7"
  input: "feature_vec_split/split_7/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "feature_vec_split/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 235
      }
    }
  }
}
node {
  name: "feature_vec_split/split_8/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_8"
  op: "SplitV"
  input: "feature_vec_split/split_1"
  input: "feature_vec_split/Const_8"
  input: "feature_vec_split/split_8/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_vec_split/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 235
      }
    }
  }
}
node {
  name: "feature_vec_split/split_9/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_9"
  op: "SplitV"
  input: "feature_vec_split/split_1:1"
  input: "feature_vec_split/Const_9"
  input: "feature_vec_split/split_9/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_vec_split/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 14
      }
    }
  }
}
node {
  name: "feature_vec_split/split_10/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_vec_split/split_10"
  op: "SplitV"
  input: "feature_vec_split/split_1:2"
  input: "feature_vec_split/Const_10"
  input: "feature_vec_split/split_10/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\016\000\000\000"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "hero_main/fc1_hero_main_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "hero_main/fc1_hero_main_weight/Initializer/random_normal/RandomStandardNormal"
  input: "hero_main/fc1_hero_main_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/random_normal"
  op: "Add"
  input: "hero_main/fc1_hero_main_weight/Initializer/random_normal/mul"
  input: "hero_main/fc1_hero_main_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/Qr"
  op: "Qr"
  input: "hero_main/fc1_hero_main_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "hero_main/fc1_hero_main_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/Sign"
  op: "Sign"
  input: "hero_main/fc1_hero_main_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/mul"
  op: "Mul"
  input: "hero_main/fc1_hero_main_weight/Initializer/Qr"
  input: "hero_main/fc1_hero_main_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "hero_main/fc1_hero_main_weight/Initializer/mul"
  input: "hero_main/fc1_hero_main_weight/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\016\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/Reshape"
  op: "Reshape"
  input: "hero_main/fc1_hero_main_weight/Initializer/matrix_transpose/transpose"
  input: "hero_main/fc1_hero_main_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Initializer/mul_1"
  op: "Mul"
  input: "hero_main/fc1_hero_main_weight/Initializer/mul_1/x"
  input: "hero_main/fc1_hero_main_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/Assign"
  op: "Assign"
  input: "hero_main/fc1_hero_main_weight"
  input: "hero_main/fc1_hero_main_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_weight/read"
  op: "Identity"
  input: "hero_main/fc1_hero_main_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_bias/Assign"
  op: "Assign"
  input: "hero_main/fc1_hero_main_bias"
  input: "hero_main/fc1_hero_main_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_bias/read"
  op: "Identity"
  input: "hero_main/fc1_hero_main_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_bias"
      }
    }
  }
}
node {
  name: "hero_main/MatMul"
  op: "MatMul"
  input: "feature_vec_split/split_10"
  input: "hero_main/fc1_hero_main_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hero_main/add"
  op: "Add"
  input: "hero_main/MatMul"
  input: "hero_main/fc1_hero_main_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_main/fc1_hero_main_result_0"
  op: "Relu"
  input: "hero_main/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "hero_main/fc2_hero_main_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "hero_main/fc2_hero_main_weight/Initializer/random_normal/RandomStandardNormal"
  input: "hero_main/fc2_hero_main_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/random_normal"
  op: "Add"
  input: "hero_main/fc2_hero_main_weight/Initializer/random_normal/mul"
  input: "hero_main/fc2_hero_main_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/Qr"
  op: "Qr"
  input: "hero_main/fc2_hero_main_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "hero_main/fc2_hero_main_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/Sign"
  op: "Sign"
  input: "hero_main/fc2_hero_main_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/mul"
  op: "Mul"
  input: "hero_main/fc2_hero_main_weight/Initializer/Qr"
  input: "hero_main/fc2_hero_main_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/Reshape"
  op: "Reshape"
  input: "hero_main/fc2_hero_main_weight/Initializer/mul"
  input: "hero_main/fc2_hero_main_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Initializer/mul_1"
  op: "Mul"
  input: "hero_main/fc2_hero_main_weight/Initializer/mul_1/x"
  input: "hero_main/fc2_hero_main_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/Assign"
  op: "Assign"
  input: "hero_main/fc2_hero_main_weight"
  input: "hero_main/fc2_hero_main_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_weight/read"
  op: "Identity"
  input: "hero_main/fc2_hero_main_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_bias/Assign"
  op: "Assign"
  input: "hero_main/fc2_hero_main_bias"
  input: "hero_main/fc2_hero_main_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_bias/read"
  op: "Identity"
  input: "hero_main/fc2_hero_main_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_bias"
      }
    }
  }
}
node {
  name: "hero_main/MatMul_1"
  op: "MatMul"
  input: "hero_main/fc1_hero_main_result_0"
  input: "hero_main/fc2_hero_main_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hero_main/add_1"
  op: "Add"
  input: "hero_main/MatMul_1"
  input: "hero_main/fc2_hero_main_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_main/fc2_hero_main_result_0"
  op: "Relu"
  input: "hero_main/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "hero_main/fc3_hero_main_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "hero_main/fc3_hero_main_weight/Initializer/random_normal/RandomStandardNormal"
  input: "hero_main/fc3_hero_main_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/random_normal"
  op: "Add"
  input: "hero_main/fc3_hero_main_weight/Initializer/random_normal/mul"
  input: "hero_main/fc3_hero_main_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/Qr"
  op: "Qr"
  input: "hero_main/fc3_hero_main_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "hero_main/fc3_hero_main_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/Sign"
  op: "Sign"
  input: "hero_main/fc3_hero_main_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/mul"
  op: "Mul"
  input: "hero_main/fc3_hero_main_weight/Initializer/Qr"
  input: "hero_main/fc3_hero_main_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/Reshape"
  op: "Reshape"
  input: "hero_main/fc3_hero_main_weight/Initializer/mul"
  input: "hero_main/fc3_hero_main_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Initializer/mul_1"
  op: "Mul"
  input: "hero_main/fc3_hero_main_weight/Initializer/mul_1/x"
  input: "hero_main/fc3_hero_main_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/Assign"
  op: "Assign"
  input: "hero_main/fc3_hero_main_weight"
  input: "hero_main/fc3_hero_main_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_weight/read"
  op: "Identity"
  input: "hero_main/fc3_hero_main_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_bias/Assign"
  op: "Assign"
  input: "hero_main/fc3_hero_main_bias"
  input: "hero_main/fc3_hero_main_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_bias/read"
  op: "Identity"
  input: "hero_main/fc3_hero_main_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_bias"
      }
    }
  }
}
node {
  name: "hero_main/MatMul_2"
  op: "MatMul"
  input: "hero_main/fc2_hero_main_result_0"
  input: "hero_main/fc3_hero_main_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hero_main/fc3_hero_main_result_0"
  op: "Add"
  input: "hero_main/MatMul_2"
  input: "hero_main/fc3_hero_main_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\353\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "hero_share/fc1_hero_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "hero_share/fc1_hero_weight/Initializer/random_normal/RandomStandardNormal"
  input: "hero_share/fc1_hero_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/random_normal"
  op: "Add"
  input: "hero_share/fc1_hero_weight/Initializer/random_normal/mul"
  input: "hero_share/fc1_hero_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/Qr"
  op: "Qr"
  input: "hero_share/fc1_hero_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "hero_share/fc1_hero_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/Sign"
  op: "Sign"
  input: "hero_share/fc1_hero_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/mul"
  op: "Mul"
  input: "hero_share/fc1_hero_weight/Initializer/Qr"
  input: "hero_share/fc1_hero_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "hero_share/fc1_hero_weight/Initializer/mul"
  input: "hero_share/fc1_hero_weight/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\353\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/Reshape"
  op: "Reshape"
  input: "hero_share/fc1_hero_weight/Initializer/matrix_transpose/transpose"
  input: "hero_share/fc1_hero_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Initializer/mul_1"
  op: "Mul"
  input: "hero_share/fc1_hero_weight/Initializer/mul_1/x"
  input: "hero_share/fc1_hero_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 235
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/Assign"
  op: "Assign"
  input: "hero_share/fc1_hero_weight"
  input: "hero_share/fc1_hero_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_share/fc1_hero_weight/read"
  op: "Identity"
  input: "hero_share/fc1_hero_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_share/fc1_hero_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_share/fc1_hero_bias/Assign"
  op: "Assign"
  input: "hero_share/fc1_hero_bias"
  input: "hero_share/fc1_hero_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_share/fc1_hero_bias/read"
  op: "Identity"
  input: "hero_share/fc1_hero_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_bias"
      }
    }
  }
}
node {
  name: "hero_share/MatMul"
  op: "MatMul"
  input: "feature_vec_split/split_9"
  input: "hero_share/fc1_hero_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/add"
  op: "Add"
  input: "hero_share/MatMul"
  input: "hero_share/fc1_hero_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/fc1_hero_emy_result_0"
  op: "Relu"
  input: "hero_share/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "hero_share/fc2_hero_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "hero_share/fc2_hero_weight/Initializer/random_normal/RandomStandardNormal"
  input: "hero_share/fc2_hero_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/random_normal"
  op: "Add"
  input: "hero_share/fc2_hero_weight/Initializer/random_normal/mul"
  input: "hero_share/fc2_hero_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/Qr"
  op: "Qr"
  input: "hero_share/fc2_hero_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "hero_share/fc2_hero_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/Sign"
  op: "Sign"
  input: "hero_share/fc2_hero_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/mul"
  op: "Mul"
  input: "hero_share/fc2_hero_weight/Initializer/Qr"
  input: "hero_share/fc2_hero_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/Reshape"
  op: "Reshape"
  input: "hero_share/fc2_hero_weight/Initializer/mul"
  input: "hero_share/fc2_hero_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Initializer/mul_1"
  op: "Mul"
  input: "hero_share/fc2_hero_weight/Initializer/mul_1/x"
  input: "hero_share/fc2_hero_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/Assign"
  op: "Assign"
  input: "hero_share/fc2_hero_weight"
  input: "hero_share/fc2_hero_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_share/fc2_hero_weight/read"
  op: "Identity"
  input: "hero_share/fc2_hero_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_share/fc2_hero_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_share/fc2_hero_bias/Assign"
  op: "Assign"
  input: "hero_share/fc2_hero_bias"
  input: "hero_share/fc2_hero_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_share/fc2_hero_bias/read"
  op: "Identity"
  input: "hero_share/fc2_hero_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_bias"
      }
    }
  }
}
node {
  name: "hero_share/MatMul_1"
  op: "MatMul"
  input: "hero_share/fc1_hero_emy_result_0"
  input: "hero_share/fc2_hero_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/add_1"
  op: "Add"
  input: "hero_share/MatMul_1"
  input: "hero_share/fc2_hero_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/fc2_hero_emy_result_0"
  op: "Relu"
  input: "hero_share/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/RandomStandardNormal"
  input: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/random_normal"
  op: "Add"
  input: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/mul"
  input: "hero_share/fc3_hero_emy_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/Qr"
  op: "Qr"
  input: "hero_share/fc3_hero_emy_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "hero_share/fc3_hero_emy_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/Sign"
  op: "Sign"
  input: "hero_share/fc3_hero_emy_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/mul"
  op: "Mul"
  input: "hero_share/fc3_hero_emy_weight/Initializer/Qr"
  input: "hero_share/fc3_hero_emy_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/Reshape"
  op: "Reshape"
  input: "hero_share/fc3_hero_emy_weight/Initializer/mul"
  input: "hero_share/fc3_hero_emy_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Initializer/mul_1"
  op: "Mul"
  input: "hero_share/fc3_hero_emy_weight/Initializer/mul_1/x"
  input: "hero_share/fc3_hero_emy_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/Assign"
  op: "Assign"
  input: "hero_share/fc3_hero_emy_weight"
  input: "hero_share/fc3_hero_emy_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_weight/read"
  op: "Identity"
  input: "hero_share/fc3_hero_emy_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_bias/Assign"
  op: "Assign"
  input: "hero_share/fc3_hero_emy_bias"
  input: "hero_share/fc3_hero_emy_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_bias/read"
  op: "Identity"
  input: "hero_share/fc3_hero_emy_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_bias"
      }
    }
  }
}
node {
  name: "hero_share/MatMul_2"
  op: "MatMul"
  input: "hero_share/fc2_hero_emy_result_0"
  input: "hero_share/fc3_hero_emy_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/fc3_hero_emy_result_0"
  op: "Add"
  input: "hero_share/MatMul_2"
  input: "hero_share/fc3_hero_emy_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hero_share/split"
  op: "SplitV"
  input: "hero_share/fc3_hero_emy_result_0"
  input: "hero_share/Const"
  input: "hero_share/split/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "hero_share/hero_emy_concat_result/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hero_share/hero_emy_concat_result"
  op: "Identity"
  input: "hero_share/fc3_hero_emy_result_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/reshape_hero_emy/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/reshape_hero_emy"
  op: "Reshape"
  input: "hero_share/hero_emy_concat_result"
  input: "hero_share/reshape_hero_emy/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hero_share/pool_hero_emy"
  op: "MaxPool"
  input: "hero_share/reshape_hero_emy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "hero_share/reshape_pool_hero_emy/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/reshape_pool_hero_emy"
  op: "Reshape"
  input: "hero_share/pool_hero_emy"
  input: "hero_share/reshape_pool_hero_emy/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hero_share/MatMul_3"
  op: "MatMul"
  input: "feature_vec_split/split_8"
  input: "hero_share/fc1_hero_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/add_2"
  op: "Add"
  input: "hero_share/MatMul_3"
  input: "hero_share/fc1_hero_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/fc1_hero_frd_result_0"
  op: "Relu"
  input: "hero_share/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/MatMul_4"
  op: "MatMul"
  input: "hero_share/fc1_hero_frd_result_0"
  input: "hero_share/fc2_hero_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/add_3"
  op: "Add"
  input: "hero_share/MatMul_4"
  input: "hero_share/fc2_hero_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/fc2_hero_frd_result_0"
  op: "Relu"
  input: "hero_share/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/RandomStandardNormal"
  input: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/random_normal"
  op: "Add"
  input: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/mul"
  input: "hero_share/fc3_hero_frd_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/Qr"
  op: "Qr"
  input: "hero_share/fc3_hero_frd_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "hero_share/fc3_hero_frd_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/Sign"
  op: "Sign"
  input: "hero_share/fc3_hero_frd_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/mul"
  op: "Mul"
  input: "hero_share/fc3_hero_frd_weight/Initializer/Qr"
  input: "hero_share/fc3_hero_frd_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/Reshape"
  op: "Reshape"
  input: "hero_share/fc3_hero_frd_weight/Initializer/mul"
  input: "hero_share/fc3_hero_frd_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Initializer/mul_1"
  op: "Mul"
  input: "hero_share/fc3_hero_frd_weight/Initializer/mul_1/x"
  input: "hero_share/fc3_hero_frd_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/Assign"
  op: "Assign"
  input: "hero_share/fc3_hero_frd_weight"
  input: "hero_share/fc3_hero_frd_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_weight/read"
  op: "Identity"
  input: "hero_share/fc3_hero_frd_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_bias/Assign"
  op: "Assign"
  input: "hero_share/fc3_hero_frd_bias"
  input: "hero_share/fc3_hero_frd_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_bias/read"
  op: "Identity"
  input: "hero_share/fc3_hero_frd_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_bias"
      }
    }
  }
}
node {
  name: "hero_share/MatMul_5"
  op: "MatMul"
  input: "hero_share/fc2_hero_frd_result_0"
  input: "hero_share/fc3_hero_frd_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hero_share/fc3_hero_frd_result_0"
  op: "Add"
  input: "hero_share/MatMul_5"
  input: "hero_share/fc3_hero_frd_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hero_share/split_1"
  op: "SplitV"
  input: "hero_share/fc3_hero_frd_result_0"
  input: "hero_share/Const_1"
  input: "hero_share/split_1/split_dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "hero_share/hero_frd_concat_result/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hero_share/hero_frd_concat_result"
  op: "Identity"
  input: "hero_share/fc3_hero_frd_result_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hero_share/reshape_hero_frd/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/reshape_hero_frd"
  op: "Reshape"
  input: "hero_share/hero_frd_concat_result"
  input: "hero_share/reshape_hero_frd/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hero_share/pool_hero_frd"
  op: "MaxPool"
  input: "hero_share/reshape_hero_frd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "hero_share/reshape_pool_hero_frd/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "hero_share/reshape_pool_hero_frd"
  op: "Reshape"
  input: "hero_share/pool_hero_frd"
  input: "hero_share/reshape_pool_hero_frd/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "soldier_share/fc1_soldier_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "soldier_share/fc1_soldier_weight/Initializer/random_normal/RandomStandardNormal"
  input: "soldier_share/fc1_soldier_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/random_normal"
  op: "Add"
  input: "soldier_share/fc1_soldier_weight/Initializer/random_normal/mul"
  input: "soldier_share/fc1_soldier_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/Qr"
  op: "Qr"
  input: "soldier_share/fc1_soldier_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "soldier_share/fc1_soldier_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/Sign"
  op: "Sign"
  input: "soldier_share/fc1_soldier_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/mul"
  op: "Mul"
  input: "soldier_share/fc1_soldier_weight/Initializer/Qr"
  input: "soldier_share/fc1_soldier_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "soldier_share/fc1_soldier_weight/Initializer/mul"
  input: "soldier_share/fc1_soldier_weight/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\022\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/Reshape"
  op: "Reshape"
  input: "soldier_share/fc1_soldier_weight/Initializer/matrix_transpose/transpose"
  input: "soldier_share/fc1_soldier_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Initializer/mul_1"
  op: "Mul"
  input: "soldier_share/fc1_soldier_weight/Initializer/mul_1/x"
  input: "soldier_share/fc1_soldier_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/Assign"
  op: "Assign"
  input: "soldier_share/fc1_soldier_weight"
  input: "soldier_share/fc1_soldier_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_weight/read"
  op: "Identity"
  input: "soldier_share/fc1_soldier_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_bias/Assign"
  op: "Assign"
  input: "soldier_share/fc1_soldier_bias"
  input: "soldier_share/fc1_soldier_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_bias/read"
  op: "Identity"
  input: "soldier_share/fc1_soldier_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_bias"
      }
    }
  }
}
node {
  name: "soldier_share/MatMul"
  op: "MatMul"
  input: "feature_vec_split/split_4"
  input: "soldier_share/fc1_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add"
  op: "Add"
  input: "soldier_share/MatMul"
  input: "soldier_share/fc1_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_1_result_0"
  op: "Relu"
  input: "soldier_share/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "soldier_share/fc2_soldier_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "soldier_share/fc2_soldier_weight/Initializer/random_normal/RandomStandardNormal"
  input: "soldier_share/fc2_soldier_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/random_normal"
  op: "Add"
  input: "soldier_share/fc2_soldier_weight/Initializer/random_normal/mul"
  input: "soldier_share/fc2_soldier_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/Qr"
  op: "Qr"
  input: "soldier_share/fc2_soldier_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "soldier_share/fc2_soldier_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/Sign"
  op: "Sign"
  input: "soldier_share/fc2_soldier_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/mul"
  op: "Mul"
  input: "soldier_share/fc2_soldier_weight/Initializer/Qr"
  input: "soldier_share/fc2_soldier_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/Reshape"
  op: "Reshape"
  input: "soldier_share/fc2_soldier_weight/Initializer/mul"
  input: "soldier_share/fc2_soldier_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Initializer/mul_1"
  op: "Mul"
  input: "soldier_share/fc2_soldier_weight/Initializer/mul_1/x"
  input: "soldier_share/fc2_soldier_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/Assign"
  op: "Assign"
  input: "soldier_share/fc2_soldier_weight"
  input: "soldier_share/fc2_soldier_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_weight/read"
  op: "Identity"
  input: "soldier_share/fc2_soldier_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_bias/Assign"
  op: "Assign"
  input: "soldier_share/fc2_soldier_bias"
  input: "soldier_share/fc2_soldier_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_bias/read"
  op: "Identity"
  input: "soldier_share/fc2_soldier_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_bias"
      }
    }
  }
}
node {
  name: "soldier_share/MatMul_1"
  op: "MatMul"
  input: "soldier_share/fc1_soldier_1_result_0"
  input: "soldier_share/fc2_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_1"
  op: "Add"
  input: "soldier_share/MatMul_1"
  input: "soldier_share/fc2_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_1_result_0"
  op: "Relu"
  input: "soldier_share/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/RandomStandardNormal"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal"
  op: "Add"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/mul"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/Qr"
  op: "Qr"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/Sign"
  op: "Sign"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/mul"
  op: "Mul"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/Qr"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/Reshape"
  op: "Reshape"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/mul"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Initializer/mul_1"
  op: "Mul"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/mul_1/x"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/Assign"
  op: "Assign"
  input: "soldier_share/fc3_soldier_1_weight"
  input: "soldier_share/fc3_soldier_1_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_weight/read"
  op: "Identity"
  input: "soldier_share/fc3_soldier_1_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_bias/Assign"
  op: "Assign"
  input: "soldier_share/fc3_soldier_1_bias"
  input: "soldier_share/fc3_soldier_1_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_bias/read"
  op: "Identity"
  input: "soldier_share/fc3_soldier_1_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_bias"
      }
    }
  }
}
node {
  name: "soldier_share/MatMul_2"
  op: "MatMul"
  input: "soldier_share/fc2_soldier_1_result_0"
  input: "soldier_share/fc3_soldier_1_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_result_0"
  op: "Add"
  input: "soldier_share/MatMul_2"
  input: "soldier_share/fc3_soldier_1_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_3"
  op: "MatMul"
  input: "feature_vec_split/split_4:1"
  input: "soldier_share/fc1_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_2"
  op: "Add"
  input: "soldier_share/MatMul_3"
  input: "soldier_share/fc1_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_1_result_1"
  op: "Relu"
  input: "soldier_share/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_4"
  op: "MatMul"
  input: "soldier_share/fc1_soldier_1_result_1"
  input: "soldier_share/fc2_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_3"
  op: "Add"
  input: "soldier_share/MatMul_4"
  input: "soldier_share/fc2_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_1_result_1"
  op: "Relu"
  input: "soldier_share/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_5"
  op: "MatMul"
  input: "soldier_share/fc2_soldier_1_result_1"
  input: "soldier_share/fc3_soldier_1_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_result_1"
  op: "Add"
  input: "soldier_share/MatMul_5"
  input: "soldier_share/fc3_soldier_1_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_6"
  op: "MatMul"
  input: "feature_vec_split/split_4:2"
  input: "soldier_share/fc1_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_4"
  op: "Add"
  input: "soldier_share/MatMul_6"
  input: "soldier_share/fc1_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_1_result_2"
  op: "Relu"
  input: "soldier_share/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_7"
  op: "MatMul"
  input: "soldier_share/fc1_soldier_1_result_2"
  input: "soldier_share/fc2_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_5"
  op: "Add"
  input: "soldier_share/MatMul_7"
  input: "soldier_share/fc2_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_1_result_2"
  op: "Relu"
  input: "soldier_share/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_8"
  op: "MatMul"
  input: "soldier_share/fc2_soldier_1_result_2"
  input: "soldier_share/fc3_soldier_1_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_result_2"
  op: "Add"
  input: "soldier_share/MatMul_8"
  input: "soldier_share/fc3_soldier_1_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_9"
  op: "MatMul"
  input: "feature_vec_split/split_4:3"
  input: "soldier_share/fc1_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_6"
  op: "Add"
  input: "soldier_share/MatMul_9"
  input: "soldier_share/fc1_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_1_result_3"
  op: "Relu"
  input: "soldier_share/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_10"
  op: "MatMul"
  input: "soldier_share/fc1_soldier_1_result_3"
  input: "soldier_share/fc2_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_7"
  op: "Add"
  input: "soldier_share/MatMul_10"
  input: "soldier_share/fc2_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_1_result_3"
  op: "Relu"
  input: "soldier_share/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_11"
  op: "MatMul"
  input: "soldier_share/fc2_soldier_1_result_3"
  input: "soldier_share/fc3_soldier_1_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_1_result_3"
  op: "Add"
  input: "soldier_share/MatMul_11"
  input: "soldier_share/fc3_soldier_1_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/soldier_1_concat_result/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "soldier_share/soldier_1_concat_result"
  op: "ConcatV2"
  input: "soldier_share/fc3_soldier_1_result_0"
  input: "soldier_share/fc3_soldier_1_result_1"
  input: "soldier_share/fc3_soldier_1_result_2"
  input: "soldier_share/fc3_soldier_1_result_3"
  input: "soldier_share/soldier_1_concat_result/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "soldier_share/reshape_frd_soldier/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/reshape_frd_soldier"
  op: "Reshape"
  input: "soldier_share/soldier_1_concat_result"
  input: "soldier_share/reshape_frd_soldier/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "soldier_share/pool_frd_soldier"
  op: "MaxPool"
  input: "soldier_share/reshape_frd_soldier"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 4
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "soldier_share/reshape_pool_frd_soldier/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/reshape_pool_frd_soldier"
  op: "Reshape"
  input: "soldier_share/pool_frd_soldier"
  input: "soldier_share/reshape_pool_frd_soldier/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "soldier_share/MatMul_12"
  op: "MatMul"
  input: "feature_vec_split/split_5"
  input: "soldier_share/fc1_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_8"
  op: "Add"
  input: "soldier_share/MatMul_12"
  input: "soldier_share/fc1_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_2_result_0"
  op: "Relu"
  input: "soldier_share/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_13"
  op: "MatMul"
  input: "soldier_share/fc1_soldier_2_result_0"
  input: "soldier_share/fc2_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_9"
  op: "Add"
  input: "soldier_share/MatMul_13"
  input: "soldier_share/fc2_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_2_result_0"
  op: "Relu"
  input: "soldier_share/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/RandomStandardNormal"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal"
  op: "Add"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/mul"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/Qr"
  op: "Qr"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/Sign"
  op: "Sign"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/mul"
  op: "Mul"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/Qr"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/Reshape"
  op: "Reshape"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/mul"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Initializer/mul_1"
  op: "Mul"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/mul_1/x"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/Assign"
  op: "Assign"
  input: "soldier_share/fc3_soldier_2_weight"
  input: "soldier_share/fc3_soldier_2_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_weight/read"
  op: "Identity"
  input: "soldier_share/fc3_soldier_2_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_bias/Assign"
  op: "Assign"
  input: "soldier_share/fc3_soldier_2_bias"
  input: "soldier_share/fc3_soldier_2_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_bias/read"
  op: "Identity"
  input: "soldier_share/fc3_soldier_2_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_bias"
      }
    }
  }
}
node {
  name: "soldier_share/MatMul_14"
  op: "MatMul"
  input: "soldier_share/fc2_soldier_2_result_0"
  input: "soldier_share/fc3_soldier_2_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_result_0"
  op: "Add"
  input: "soldier_share/MatMul_14"
  input: "soldier_share/fc3_soldier_2_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_15"
  op: "MatMul"
  input: "feature_vec_split/split_5:1"
  input: "soldier_share/fc1_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_10"
  op: "Add"
  input: "soldier_share/MatMul_15"
  input: "soldier_share/fc1_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_2_result_1"
  op: "Relu"
  input: "soldier_share/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_16"
  op: "MatMul"
  input: "soldier_share/fc1_soldier_2_result_1"
  input: "soldier_share/fc2_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_11"
  op: "Add"
  input: "soldier_share/MatMul_16"
  input: "soldier_share/fc2_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_2_result_1"
  op: "Relu"
  input: "soldier_share/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_17"
  op: "MatMul"
  input: "soldier_share/fc2_soldier_2_result_1"
  input: "soldier_share/fc3_soldier_2_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_result_1"
  op: "Add"
  input: "soldier_share/MatMul_17"
  input: "soldier_share/fc3_soldier_2_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_18"
  op: "MatMul"
  input: "feature_vec_split/split_5:2"
  input: "soldier_share/fc1_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_12"
  op: "Add"
  input: "soldier_share/MatMul_18"
  input: "soldier_share/fc1_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_2_result_2"
  op: "Relu"
  input: "soldier_share/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_19"
  op: "MatMul"
  input: "soldier_share/fc1_soldier_2_result_2"
  input: "soldier_share/fc2_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_13"
  op: "Add"
  input: "soldier_share/MatMul_19"
  input: "soldier_share/fc2_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_2_result_2"
  op: "Relu"
  input: "soldier_share/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_20"
  op: "MatMul"
  input: "soldier_share/fc2_soldier_2_result_2"
  input: "soldier_share/fc3_soldier_2_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_result_2"
  op: "Add"
  input: "soldier_share/MatMul_20"
  input: "soldier_share/fc3_soldier_2_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_21"
  op: "MatMul"
  input: "feature_vec_split/split_5:3"
  input: "soldier_share/fc1_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_14"
  op: "Add"
  input: "soldier_share/MatMul_21"
  input: "soldier_share/fc1_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc1_soldier_2_result_3"
  op: "Relu"
  input: "soldier_share/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_22"
  op: "MatMul"
  input: "soldier_share/fc1_soldier_2_result_3"
  input: "soldier_share/fc2_soldier_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/add_15"
  op: "Add"
  input: "soldier_share/MatMul_22"
  input: "soldier_share/fc2_soldier_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/fc2_soldier_2_result_3"
  op: "Relu"
  input: "soldier_share/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/MatMul_23"
  op: "MatMul"
  input: "soldier_share/fc2_soldier_2_result_3"
  input: "soldier_share/fc3_soldier_2_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "soldier_share/fc3_soldier_2_result_3"
  op: "Add"
  input: "soldier_share/MatMul_23"
  input: "soldier_share/fc3_soldier_2_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "soldier_share/soldier_2_concat_result/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "soldier_share/soldier_2_concat_result"
  op: "ConcatV2"
  input: "soldier_share/fc3_soldier_2_result_0"
  input: "soldier_share/fc3_soldier_2_result_1"
  input: "soldier_share/fc3_soldier_2_result_2"
  input: "soldier_share/fc3_soldier_2_result_3"
  input: "soldier_share/soldier_2_concat_result/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "soldier_share/reshape_emy_soldier/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/reshape_emy_soldier"
  op: "Reshape"
  input: "soldier_share/soldier_2_concat_result"
  input: "soldier_share/reshape_emy_soldier/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "soldier_share/pool_emy_soldier"
  op: "MaxPool"
  input: "soldier_share/reshape_emy_soldier"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 4
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "soldier_share/reshape_pool_emy_soldier/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "soldier_share/reshape_pool_emy_soldier"
  op: "Reshape"
  input: "soldier_share/pool_emy_soldier"
  input: "soldier_share/reshape_pool_emy_soldier/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "organ_share/fc1_organ_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "organ_share/fc1_organ_weight/Initializer/random_normal/RandomStandardNormal"
  input: "organ_share/fc1_organ_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/random_normal"
  op: "Add"
  input: "organ_share/fc1_organ_weight/Initializer/random_normal/mul"
  input: "organ_share/fc1_organ_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/Qr"
  op: "Qr"
  input: "organ_share/fc1_organ_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "organ_share/fc1_organ_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/Sign"
  op: "Sign"
  input: "organ_share/fc1_organ_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/mul"
  op: "Mul"
  input: "organ_share/fc1_organ_weight/Initializer/Qr"
  input: "organ_share/fc1_organ_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "organ_share/fc1_organ_weight/Initializer/mul"
  input: "organ_share/fc1_organ_weight/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\022\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/Reshape"
  op: "Reshape"
  input: "organ_share/fc1_organ_weight/Initializer/matrix_transpose/transpose"
  input: "organ_share/fc1_organ_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Initializer/mul_1"
  op: "Mul"
  input: "organ_share/fc1_organ_weight/Initializer/mul_1/x"
  input: "organ_share/fc1_organ_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/Assign"
  op: "Assign"
  input: "organ_share/fc1_organ_weight"
  input: "organ_share/fc1_organ_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "organ_share/fc1_organ_weight/read"
  op: "Identity"
  input: "organ_share/fc1_organ_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "organ_share/fc1_organ_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "organ_share/fc1_organ_bias/Assign"
  op: "Assign"
  input: "organ_share/fc1_organ_bias"
  input: "organ_share/fc1_organ_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "organ_share/fc1_organ_bias/read"
  op: "Identity"
  input: "organ_share/fc1_organ_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_bias"
      }
    }
  }
}
node {
  name: "organ_share/MatMul"
  op: "MatMul"
  input: "feature_vec_split/split_6"
  input: "organ_share/fc1_organ_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/add"
  op: "Add"
  input: "organ_share/MatMul"
  input: "organ_share/fc1_organ_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc1_organ_1_result_0"
  op: "Relu"
  input: "organ_share/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "organ_share/fc2_organ_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "organ_share/fc2_organ_weight/Initializer/random_normal/RandomStandardNormal"
  input: "organ_share/fc2_organ_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/random_normal"
  op: "Add"
  input: "organ_share/fc2_organ_weight/Initializer/random_normal/mul"
  input: "organ_share/fc2_organ_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/Qr"
  op: "Qr"
  input: "organ_share/fc2_organ_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "organ_share/fc2_organ_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/Sign"
  op: "Sign"
  input: "organ_share/fc2_organ_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/mul"
  op: "Mul"
  input: "organ_share/fc2_organ_weight/Initializer/Qr"
  input: "organ_share/fc2_organ_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/Reshape"
  op: "Reshape"
  input: "organ_share/fc2_organ_weight/Initializer/mul"
  input: "organ_share/fc2_organ_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Initializer/mul_1"
  op: "Mul"
  input: "organ_share/fc2_organ_weight/Initializer/mul_1/x"
  input: "organ_share/fc2_organ_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/Assign"
  op: "Assign"
  input: "organ_share/fc2_organ_weight"
  input: "organ_share/fc2_organ_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "organ_share/fc2_organ_weight/read"
  op: "Identity"
  input: "organ_share/fc2_organ_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "organ_share/fc2_organ_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "organ_share/fc2_organ_bias/Assign"
  op: "Assign"
  input: "organ_share/fc2_organ_bias"
  input: "organ_share/fc2_organ_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "organ_share/fc2_organ_bias/read"
  op: "Identity"
  input: "organ_share/fc2_organ_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_bias"
      }
    }
  }
}
node {
  name: "organ_share/MatMul_1"
  op: "MatMul"
  input: "organ_share/fc1_organ_1_result_0"
  input: "organ_share/fc2_organ_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/add_1"
  op: "Add"
  input: "organ_share/MatMul_1"
  input: "organ_share/fc2_organ_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc2_organ_1_result_0"
  op: "Relu"
  input: "organ_share/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "organ_share/fc3_organ_1_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "organ_share/fc3_organ_1_weight/Initializer/random_normal/RandomStandardNormal"
  input: "organ_share/fc3_organ_1_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/random_normal"
  op: "Add"
  input: "organ_share/fc3_organ_1_weight/Initializer/random_normal/mul"
  input: "organ_share/fc3_organ_1_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/Qr"
  op: "Qr"
  input: "organ_share/fc3_organ_1_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "organ_share/fc3_organ_1_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/Sign"
  op: "Sign"
  input: "organ_share/fc3_organ_1_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/mul"
  op: "Mul"
  input: "organ_share/fc3_organ_1_weight/Initializer/Qr"
  input: "organ_share/fc3_organ_1_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/Reshape"
  op: "Reshape"
  input: "organ_share/fc3_organ_1_weight/Initializer/mul"
  input: "organ_share/fc3_organ_1_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Initializer/mul_1"
  op: "Mul"
  input: "organ_share/fc3_organ_1_weight/Initializer/mul_1/x"
  input: "organ_share/fc3_organ_1_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/Assign"
  op: "Assign"
  input: "organ_share/fc3_organ_1_weight"
  input: "organ_share/fc3_organ_1_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_weight/read"
  op: "Identity"
  input: "organ_share/fc3_organ_1_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_bias/Assign"
  op: "Assign"
  input: "organ_share/fc3_organ_1_bias"
  input: "organ_share/fc3_organ_1_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_bias/read"
  op: "Identity"
  input: "organ_share/fc3_organ_1_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_bias"
      }
    }
  }
}
node {
  name: "organ_share/MatMul_2"
  op: "MatMul"
  input: "organ_share/fc2_organ_1_result_0"
  input: "organ_share/fc3_organ_1_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_result_0"
  op: "Add"
  input: "organ_share/MatMul_2"
  input: "organ_share/fc3_organ_1_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/MatMul_3"
  op: "MatMul"
  input: "feature_vec_split/split_6:1"
  input: "organ_share/fc1_organ_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/add_2"
  op: "Add"
  input: "organ_share/MatMul_3"
  input: "organ_share/fc1_organ_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc1_organ_1_result_1"
  op: "Relu"
  input: "organ_share/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/MatMul_4"
  op: "MatMul"
  input: "organ_share/fc1_organ_1_result_1"
  input: "organ_share/fc2_organ_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/add_3"
  op: "Add"
  input: "organ_share/MatMul_4"
  input: "organ_share/fc2_organ_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc2_organ_1_result_1"
  op: "Relu"
  input: "organ_share/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/MatMul_5"
  op: "MatMul"
  input: "organ_share/fc2_organ_1_result_1"
  input: "organ_share/fc3_organ_1_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/fc3_organ_1_result_1"
  op: "Add"
  input: "organ_share/MatMul_5"
  input: "organ_share/fc3_organ_1_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/organ_1_concat_result/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "organ_share/organ_1_concat_result"
  op: "ConcatV2"
  input: "organ_share/fc3_organ_1_result_0"
  input: "organ_share/fc3_organ_1_result_1"
  input: "organ_share/organ_1_concat_result/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "organ_share/reshape_frd_organ/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/reshape_frd_organ"
  op: "Reshape"
  input: "organ_share/organ_1_concat_result"
  input: "organ_share/reshape_frd_organ/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "organ_share/pool_frd_organ"
  op: "MaxPool"
  input: "organ_share/reshape_frd_organ"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "organ_share/reshape_pool_frd_organ/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/reshape_pool_frd_organ"
  op: "Reshape"
  input: "organ_share/pool_frd_organ"
  input: "organ_share/reshape_pool_frd_organ/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "organ_share/MatMul_6"
  op: "MatMul"
  input: "feature_vec_split/split_7"
  input: "organ_share/fc1_organ_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/add_4"
  op: "Add"
  input: "organ_share/MatMul_6"
  input: "organ_share/fc1_organ_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc1_organ_2_result_0"
  op: "Relu"
  input: "organ_share/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/MatMul_7"
  op: "MatMul"
  input: "organ_share/fc1_organ_2_result_0"
  input: "organ_share/fc2_organ_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/add_5"
  op: "Add"
  input: "organ_share/MatMul_7"
  input: "organ_share/fc2_organ_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc2_organ_2_result_0"
  op: "Relu"
  input: "organ_share/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "organ_share/fc3_organ_2_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "organ_share/fc3_organ_2_weight/Initializer/random_normal/RandomStandardNormal"
  input: "organ_share/fc3_organ_2_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/random_normal"
  op: "Add"
  input: "organ_share/fc3_organ_2_weight/Initializer/random_normal/mul"
  input: "organ_share/fc3_organ_2_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/Qr"
  op: "Qr"
  input: "organ_share/fc3_organ_2_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "organ_share/fc3_organ_2_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/Sign"
  op: "Sign"
  input: "organ_share/fc3_organ_2_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/mul"
  op: "Mul"
  input: "organ_share/fc3_organ_2_weight/Initializer/Qr"
  input: "organ_share/fc3_organ_2_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/Reshape"
  op: "Reshape"
  input: "organ_share/fc3_organ_2_weight/Initializer/mul"
  input: "organ_share/fc3_organ_2_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Initializer/mul_1"
  op: "Mul"
  input: "organ_share/fc3_organ_2_weight/Initializer/mul_1/x"
  input: "organ_share/fc3_organ_2_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/Assign"
  op: "Assign"
  input: "organ_share/fc3_organ_2_weight"
  input: "organ_share/fc3_organ_2_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_weight/read"
  op: "Identity"
  input: "organ_share/fc3_organ_2_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_bias/Assign"
  op: "Assign"
  input: "organ_share/fc3_organ_2_bias"
  input: "organ_share/fc3_organ_2_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_bias/read"
  op: "Identity"
  input: "organ_share/fc3_organ_2_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_bias"
      }
    }
  }
}
node {
  name: "organ_share/MatMul_8"
  op: "MatMul"
  input: "organ_share/fc2_organ_2_result_0"
  input: "organ_share/fc3_organ_2_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_result_0"
  op: "Add"
  input: "organ_share/MatMul_8"
  input: "organ_share/fc3_organ_2_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/MatMul_9"
  op: "MatMul"
  input: "feature_vec_split/split_7:1"
  input: "organ_share/fc1_organ_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/add_6"
  op: "Add"
  input: "organ_share/MatMul_9"
  input: "organ_share/fc1_organ_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc1_organ_2_result_1"
  op: "Relu"
  input: "organ_share/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/MatMul_10"
  op: "MatMul"
  input: "organ_share/fc1_organ_2_result_1"
  input: "organ_share/fc2_organ_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/add_7"
  op: "Add"
  input: "organ_share/MatMul_10"
  input: "organ_share/fc2_organ_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/fc2_organ_2_result_1"
  op: "Relu"
  input: "organ_share/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/MatMul_11"
  op: "MatMul"
  input: "organ_share/fc2_organ_2_result_1"
  input: "organ_share/fc3_organ_2_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "organ_share/fc3_organ_2_result_1"
  op: "Add"
  input: "organ_share/MatMul_11"
  input: "organ_share/fc3_organ_2_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "organ_share/organ_2_concat_result/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "organ_share/organ_2_concat_result"
  op: "ConcatV2"
  input: "organ_share/fc3_organ_2_result_0"
  input: "organ_share/fc3_organ_2_result_1"
  input: "organ_share/organ_2_concat_result/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "organ_share/reshape_emy_organ/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/reshape_emy_organ"
  op: "Reshape"
  input: "organ_share/organ_2_concat_result"
  input: "organ_share/reshape_emy_organ/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "organ_share/pool_emy_organ"
  op: "MaxPool"
  input: "organ_share/reshape_emy_organ"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "organ_share/reshape_pool_emy_organ/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "organ_share/reshape_pool_emy_organ"
  op: "Reshape"
  input: "organ_share/pool_emy_organ"
  input: "organ_share/reshape_pool_emy_organ/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "public_concat/concat_result/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "public_concat/concat_result"
  op: "ConcatV2"
  input: "soldier_share/reshape_pool_frd_soldier"
  input: "soldier_share/reshape_pool_emy_soldier"
  input: "organ_share/reshape_pool_frd_organ"
  input: "organ_share/reshape_pool_emy_organ"
  input: "hero_main/fc3_hero_main_result_0"
  input: "hero_share/reshape_pool_hero_frd"
  input: "hero_share/reshape_pool_hero_emy"
  input: "feature_vec_split/split:3"
  input: "public_concat/concat_result/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\251\001\000\000"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "public_weicao/fc_public_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "public_weicao/fc_public_weight/Initializer/random_normal/RandomStandardNormal"
  input: "public_weicao/fc_public_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/random_normal"
  op: "Add"
  input: "public_weicao/fc_public_weight/Initializer/random_normal/mul"
  input: "public_weicao/fc_public_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/Qr"
  op: "Qr"
  input: "public_weicao/fc_public_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "public_weicao/fc_public_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/Sign"
  op: "Sign"
  input: "public_weicao/fc_public_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/mul"
  op: "Mul"
  input: "public_weicao/fc_public_weight/Initializer/Qr"
  input: "public_weicao/fc_public_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "public_weicao/fc_public_weight/Initializer/mul"
  input: "public_weicao/fc_public_weight/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\251\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/Reshape"
  op: "Reshape"
  input: "public_weicao/fc_public_weight/Initializer/matrix_transpose/transpose"
  input: "public_weicao/fc_public_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Initializer/mul_1"
  op: "Mul"
  input: "public_weicao/fc_public_weight/Initializer/mul_1/x"
  input: "public_weicao/fc_public_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 425
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/Assign"
  op: "Assign"
  input: "public_weicao/fc_public_weight"
  input: "public_weicao/fc_public_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "public_weicao/fc_public_weight/read"
  op: "Identity"
  input: "public_weicao/fc_public_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "public_weicao/fc_public_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "public_weicao/fc_public_bias/Assign"
  op: "Assign"
  input: "public_weicao/fc_public_bias"
  input: "public_weicao/fc_public_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "public_weicao/fc_public_bias/read"
  op: "Identity"
  input: "public_weicao/fc_public_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_bias"
      }
    }
  }
}
node {
  name: "public_weicao/MatMul"
  op: "MatMul"
  input: "public_concat/concat_result"
  input: "public_weicao/fc_public_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "public_weicao/add"
  op: "Add"
  input: "public_weicao/MatMul"
  input: "public_weicao/fc_public_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_weicao/fc_public_result"
  op: "Relu"
  input: "public_weicao/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_weicao/reshape_fc_public_result/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "public_weicao/reshape_fc_public_result"
  op: "Reshape"
  input: "public_weicao/fc_public_result"
  input: "public_weicao/reshape_fc_public_result/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "public_lstm/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "public_lstm/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "public_lstm/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "public_lstm/rnn/strided_slice"
  op: "StridedSlice"
  input: "public_weicao/reshape_fc_public_result"
  input: "public_lstm/rnn/strided_slice/stack"
  input: "public_lstm/rnn/strided_slice/stack_1"
  input: "public_lstm/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\002\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10067340731620789
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10067340731620789
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 528
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "public_lstm/rnn/basic_lstm_cell/kernel"
  input: "public_lstm/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "public_lstm/rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "public_lstm/rnn/basic_lstm_cell/bias"
  input: "public_lstm/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "public_lstm/rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "public_lstm/rnn/strided_slice"
  input: "Reshape_3"
  input: "public_lstm/rnn/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "public_lstm/rnn/basic_lstm_cell/concat"
  input: "public_lstm/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "public_lstm/rnn/basic_lstm_cell/MatMul"
  input: "public_lstm/rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/split"
  op: "Split"
  input: "public_lstm/rnn/basic_lstm_cell/Const"
  input: "public_lstm/rnn/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Add"
  op: "Add"
  input: "public_lstm/rnn/basic_lstm_cell/split:2"
  input: "public_lstm/rnn/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "public_lstm/rnn/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Mul"
  op: "Mul"
  input: "Reshape_2"
  input: "public_lstm/rnn/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "public_lstm/rnn/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "public_lstm/rnn/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "public_lstm/rnn/basic_lstm_cell/Sigmoid_1"
  input: "public_lstm/rnn/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Add_1"
  op: "Add"
  input: "public_lstm/rnn/basic_lstm_cell/Mul"
  input: "public_lstm/rnn/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "public_lstm/rnn/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "public_lstm/rnn/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "public_lstm/rnn/basic_lstm_cell/Tanh_1"
  input: "public_lstm/rnn/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/rnn/lstm_outputs/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "public_lstm/rnn/lstm_outputs"
  op: "Identity"
  input: "public_lstm/rnn/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "public_lstm/reshape_lstm_outputs_result/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\020\000\000\000"
      }
    }
  }
}
node {
  name: "public_lstm/reshape_lstm_outputs_result"
  op: "Reshape"
  input: "public_lstm/rnn/lstm_outputs"
  input: "public_lstm/reshape_lstm_outputs_result/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/RandomStandardNormal"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal"
  op: "Add"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/mul"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/Qr"
  op: "Qr"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/Sign"
  op: "Sign"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/mul"
  op: "Mul"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/Qr"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/Reshape"
  op: "Reshape"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/mul"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Initializer/mul_1"
  op: "Mul"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/mul_1/x"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/Assign"
  op: "Assign"
  input: "fc2_label_0/fc2_label_0_weight"
  input: "fc2_label_0/fc2_label_0_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_weight/read"
  op: "Identity"
  input: "fc2_label_0/fc2_label_0_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_bias/Assign"
  op: "Assign"
  input: "fc2_label_0/fc2_label_0_bias"
  input: "fc2_label_0/fc2_label_0_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_bias/read"
  op: "Identity"
  input: "fc2_label_0/fc2_label_0_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_bias"
      }
    }
  }
}
node {
  name: "fc2_label_0/MatMul"
  op: "MatMul"
  input: "public_lstm/reshape_lstm_outputs_result"
  input: "fc2_label_0/fc2_label_0_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_0/fc2_label_0_result"
  op: "Add"
  input: "fc2_label_0/MatMul"
  input: "fc2_label_0/fc2_label_0_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/RandomStandardNormal"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal"
  op: "Add"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/mul"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/Qr"
  op: "Qr"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/Sign"
  op: "Sign"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/mul"
  op: "Mul"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/Qr"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/Reshape"
  op: "Reshape"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/mul"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Initializer/mul_1"
  op: "Mul"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/mul_1/x"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/Assign"
  op: "Assign"
  input: "fc2_label_1/fc2_label_1_weight"
  input: "fc2_label_1/fc2_label_1_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_weight/read"
  op: "Identity"
  input: "fc2_label_1/fc2_label_1_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_bias/Assign"
  op: "Assign"
  input: "fc2_label_1/fc2_label_1_bias"
  input: "fc2_label_1/fc2_label_1_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_bias/read"
  op: "Identity"
  input: "fc2_label_1/fc2_label_1_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_bias"
      }
    }
  }
}
node {
  name: "fc2_label_1/MatMul"
  op: "MatMul"
  input: "public_lstm/reshape_lstm_outputs_result"
  input: "fc2_label_1/fc2_label_1_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_1/fc2_label_1_result"
  op: "Add"
  input: "fc2_label_1/MatMul"
  input: "fc2_label_1/fc2_label_1_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/RandomStandardNormal"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal"
  op: "Add"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/mul"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/Qr"
  op: "Qr"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/Sign"
  op: "Sign"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/mul"
  op: "Mul"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/Qr"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/Reshape"
  op: "Reshape"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/mul"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Initializer/mul_1"
  op: "Mul"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/mul_1/x"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/Assign"
  op: "Assign"
  input: "fc2_label_2/fc2_label_2_weight"
  input: "fc2_label_2/fc2_label_2_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_weight/read"
  op: "Identity"
  input: "fc2_label_2/fc2_label_2_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_bias/Assign"
  op: "Assign"
  input: "fc2_label_2/fc2_label_2_bias"
  input: "fc2_label_2/fc2_label_2_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_bias/read"
  op: "Identity"
  input: "fc2_label_2/fc2_label_2_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_bias"
      }
    }
  }
}
node {
  name: "fc2_label_2/MatMul"
  op: "MatMul"
  input: "public_lstm/reshape_lstm_outputs_result"
  input: "fc2_label_2/fc2_label_2_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_2/fc2_label_2_result"
  op: "Add"
  input: "fc2_label_2/MatMul"
  input: "fc2_label_2/fc2_label_2_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/RandomStandardNormal"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal"
  op: "Add"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/mul"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/Qr"
  op: "Qr"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/Sign"
  op: "Sign"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/mul"
  op: "Mul"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/Qr"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/Reshape"
  op: "Reshape"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/mul"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Initializer/mul_1"
  op: "Mul"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/mul_1/x"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/Assign"
  op: "Assign"
  input: "fc2_label_3/fc2_label_3_weight"
  input: "fc2_label_3/fc2_label_3_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_weight/read"
  op: "Identity"
  input: "fc2_label_3/fc2_label_3_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_bias/Assign"
  op: "Assign"
  input: "fc2_label_3/fc2_label_3_bias"
  input: "fc2_label_3/fc2_label_3_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_bias/read"
  op: "Identity"
  input: "fc2_label_3/fc2_label_3_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_bias"
      }
    }
  }
}
node {
  name: "fc2_label_3/MatMul"
  op: "MatMul"
  input: "public_lstm/reshape_lstm_outputs_result"
  input: "fc2_label_3/fc2_label_3_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_3/fc2_label_3_result"
  op: "Add"
  input: "fc2_label_3/MatMul"
  input: "fc2_label_3/fc2_label_3_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/RandomStandardNormal"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal"
  op: "Add"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/mul"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/Qr"
  op: "Qr"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/Sign"
  op: "Sign"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/mul"
  op: "Mul"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/Qr"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/Reshape"
  op: "Reshape"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/mul"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Initializer/mul_1"
  op: "Mul"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/mul_1/x"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/Assign"
  op: "Assign"
  input: "fc2_label_4/fc2_label_4_weight"
  input: "fc2_label_4/fc2_label_4_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_weight/read"
  op: "Identity"
  input: "fc2_label_4/fc2_label_4_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_bias/Assign"
  op: "Assign"
  input: "fc2_label_4/fc2_label_4_bias"
  input: "fc2_label_4/fc2_label_4_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_bias/read"
  op: "Identity"
  input: "fc2_label_4/fc2_label_4_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_bias"
      }
    }
  }
}
node {
  name: "fc2_label_4/MatMul"
  op: "MatMul"
  input: "public_lstm/reshape_lstm_outputs_result"
  input: "fc2_label_4/fc2_label_4_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_4/fc2_label_4_result"
  op: "Add"
  input: "fc2_label_4/MatMul"
  input: "fc2_label_4/fc2_label_4_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/RandomStandardNormal"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal"
  op: "Add"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/mul"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/Qr"
  op: "Qr"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/Sign"
  op: "Sign"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/mul"
  op: "Mul"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/Qr"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/mul"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/Reshape"
  op: "Reshape"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/matrix_transpose/transpose"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Initializer/mul_1"
  op: "Mul"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/mul_1/x"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/Assign"
  op: "Assign"
  input: "fc2_label_5/fc2_label_5_weight"
  input: "fc2_label_5/fc2_label_5_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_weight/read"
  op: "Identity"
  input: "fc2_label_5/fc2_label_5_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_bias/Assign"
  op: "Assign"
  input: "fc2_label_5/fc2_label_5_bias"
  input: "fc2_label_5/fc2_label_5_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_bias/read"
  op: "Identity"
  input: "fc2_label_5/fc2_label_5_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_bias"
      }
    }
  }
}
node {
  name: "fc2_label_5/MatMul"
  op: "MatMul"
  input: "public_lstm/reshape_lstm_outputs_result"
  input: "fc2_label_5/fc2_label_5_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_5/fc2_label_5_result"
  op: "Add"
  input: "fc2_label_5/MatMul"
  input: "fc2_label_5/fc2_label_5_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2_label_5/stack"
  op: "Pack"
  input: "Const"
  input: "hero_share/split:1"
  input: "hero_share/split_1:1"
  input: "soldier_share/fc3_soldier_2_result_0"
  input: "soldier_share/fc3_soldier_2_result_1"
  input: "soldier_share/fc3_soldier_2_result_2"
  input: "soldier_share/fc3_soldier_2_result_3"
  input: "organ_share/reshape_pool_emy_organ"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fc2_label_5/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fc2_label_5/dense/kernel/Initializer/random_uniform/max"
  input: "fc2_label_5/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fc2_label_5/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "fc2_label_5/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fc2_label_5/dense/kernel/Initializer/random_uniform/mul"
  input: "fc2_label_5/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel/Assign"
  op: "Assign"
  input: "fc2_label_5/dense/kernel"
  input: "fc2_label_5/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_label_5/dense/kernel/read"
  op: "Identity"
  input: "fc2_label_5/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/transpose"
  op: "Transpose"
  input: "fc2_label_5/stack"
  input: "fc2_label_5/dense/Tensordot/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "fc2_label_5/dense/Tensordot/transpose"
  input: "fc2_label_5/dense/Tensordot/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "fc2_label_5/dense/kernel/read"
  input: "fc2_label_5/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "fc2_label_5/dense/Tensordot/transpose_1"
  input: "fc2_label_5/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "fc2_label_5/dense/Tensordot/Reshape"
  input: "fc2_label_5/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/dense/Tensordot"
  op: "Reshape"
  input: "fc2_label_5/dense/Tensordot/MatMul"
  input: "fc2_label_5/dense/Tensordot/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc2_label_5/reshape_target_embed/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/reshape_target_embed"
  op: "Reshape"
  input: "fc2_label_5/fc2_label_5_result"
  input: "fc2_label_5/reshape_target_embed/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc2_label_5/MatMul_1"
  op: "BatchMatMulV2"
  input: "fc2_label_5/dense/Tensordot"
  input: "fc2_label_5/reshape_target_embed"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_label_5/target_output/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\010\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_label_5/target_output"
  op: "Reshape"
  input: "fc2_label_5/MatMul_1"
  input: "fc2_label_5/target_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "fc1_value/fc1_value_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "fc1_value/fc1_value_weight/Initializer/random_normal/RandomStandardNormal"
  input: "fc1_value/fc1_value_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/random_normal"
  op: "Add"
  input: "fc1_value/fc1_value_weight/Initializer/random_normal/mul"
  input: "fc1_value/fc1_value_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/Qr"
  op: "Qr"
  input: "fc1_value/fc1_value_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "fc1_value/fc1_value_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/Sign"
  op: "Sign"
  input: "fc1_value/fc1_value_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/mul"
  op: "Mul"
  input: "fc1_value/fc1_value_weight/Initializer/Qr"
  input: "fc1_value/fc1_value_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "fc1_value/fc1_value_weight/Initializer/mul"
  input: "fc1_value/fc1_value_weight/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/Reshape"
  op: "Reshape"
  input: "fc1_value/fc1_value_weight/Initializer/matrix_transpose/transpose"
  input: "fc1_value/fc1_value_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Initializer/mul_1"
  op: "Mul"
  input: "fc1_value/fc1_value_weight/Initializer/mul_1/x"
  input: "fc1_value/fc1_value_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/Assign"
  op: "Assign"
  input: "fc1_value/fc1_value_weight"
  input: "fc1_value/fc1_value_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1_value/fc1_value_weight/read"
  op: "Identity"
  input: "fc1_value/fc1_value_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc1_value/fc1_value_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1_value/fc1_value_bias/Assign"
  op: "Assign"
  input: "fc1_value/fc1_value_bias"
  input: "fc1_value/fc1_value_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1_value/fc1_value_bias/read"
  op: "Identity"
  input: "fc1_value/fc1_value_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_bias"
      }
    }
  }
}
node {
  name: "fc1_value/MatMul"
  op: "MatMul"
  input: "public_lstm/reshape_lstm_outputs_result"
  input: "fc1_value/fc1_value_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc1_value/add"
  op: "Add"
  input: "fc1_value/MatMul"
  input: "fc1_value/fc1_value_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc1_value/fc1_value_result"
  op: "Relu"
  input: "fc1_value/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "fc2_value/fc2_value_weight/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/random_normal/mul"
  op: "Mul"
  input: "fc2_value/fc2_value_weight/Initializer/random_normal/RandomStandardNormal"
  input: "fc2_value/fc2_value_weight/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/random_normal"
  op: "Add"
  input: "fc2_value/fc2_value_weight/Initializer/random_normal/mul"
  input: "fc2_value/fc2_value_weight/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/Qr"
  op: "Qr"
  input: "fc2_value/fc2_value_weight/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/DiagPart"
  op: "DiagPart"
  input: "fc2_value/fc2_value_weight/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/Sign"
  op: "Sign"
  input: "fc2_value/fc2_value_weight/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/mul"
  op: "Mul"
  input: "fc2_value/fc2_value_weight/Initializer/Qr"
  input: "fc2_value/fc2_value_weight/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/Reshape"
  op: "Reshape"
  input: "fc2_value/fc2_value_weight/Initializer/mul"
  input: "fc2_value/fc2_value_weight/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Initializer/mul_1"
  op: "Mul"
  input: "fc2_value/fc2_value_weight/Initializer/mul_1/x"
  input: "fc2_value/fc2_value_weight/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/Assign"
  op: "Assign"
  input: "fc2_value/fc2_value_weight"
  input: "fc2_value/fc2_value_weight/Initializer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_value/fc2_value_weight/read"
  op: "Identity"
  input: "fc2_value/fc2_value_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2_value/fc2_value_bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc2_value/fc2_value_bias/Assign"
  op: "Assign"
  input: "fc2_value/fc2_value_bias"
  input: "fc2_value/fc2_value_bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc2_value/fc2_value_bias/read"
  op: "Identity"
  input: "fc2_value/fc2_value_bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_bias"
      }
    }
  }
}
node {
  name: "fc2_value/MatMul"
  op: "MatMul"
  input: "fc1_value/fc1_value_result"
  input: "fc2_value/fc2_value_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc2_value/fc2_value_result"
  op: "Add"
  input: "fc2_value/MatMul"
  input: "fc2_value/fc2_value_bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "fc2_label_0/fc2_label_0_result"
  input: "fc2_label_1/fc2_label_1_result"
  input: "fc2_label_2/fc2_label_2_result"
  input: "fc2_label_3/fc2_label_3_result"
  input: "fc2_label_4/fc2_label_4_result"
  input: "fc2_label_5/target_output"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "flatten/Reshape"
  op: "Reshape"
  input: "concat"
  input: "flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "fc2_value/fc2_value_result"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "flatten_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "flatten_1/Reshape"
  op: "Reshape"
  input: "strided_slice"
  input: "flatten_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "exp_output/Identity"
  op: "Identity"
  input: "flatten/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "exp_output/Identity_1"
  op: "Identity"
  input: "flatten_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "exp_output/Identity_2"
  op: "Identity"
  input: "public_lstm/rnn/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "exp_output/Identity_3"
  op: "Identity"
  input: "public_lstm/rnn/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 51
          }
        }
        string_val: "fc1_value/fc1_value_bias"
        string_val: "fc1_value/fc1_value_weight"
        string_val: "fc2_label_0/fc2_label_0_bias"
        string_val: "fc2_label_0/fc2_label_0_weight"
        string_val: "fc2_label_1/fc2_label_1_bias"
        string_val: "fc2_label_1/fc2_label_1_weight"
        string_val: "fc2_label_2/fc2_label_2_bias"
        string_val: "fc2_label_2/fc2_label_2_weight"
        string_val: "fc2_label_3/fc2_label_3_bias"
        string_val: "fc2_label_3/fc2_label_3_weight"
        string_val: "fc2_label_4/fc2_label_4_bias"
        string_val: "fc2_label_4/fc2_label_4_weight"
        string_val: "fc2_label_5/dense/kernel"
        string_val: "fc2_label_5/fc2_label_5_bias"
        string_val: "fc2_label_5/fc2_label_5_weight"
        string_val: "fc2_value/fc2_value_bias"
        string_val: "fc2_value/fc2_value_weight"
        string_val: "hero_main/fc1_hero_main_bias"
        string_val: "hero_main/fc1_hero_main_weight"
        string_val: "hero_main/fc2_hero_main_bias"
        string_val: "hero_main/fc2_hero_main_weight"
        string_val: "hero_main/fc3_hero_main_bias"
        string_val: "hero_main/fc3_hero_main_weight"
        string_val: "hero_share/fc1_hero_bias"
        string_val: "hero_share/fc1_hero_weight"
        string_val: "hero_share/fc2_hero_bias"
        string_val: "hero_share/fc2_hero_weight"
        string_val: "hero_share/fc3_hero_emy_bias"
        string_val: "hero_share/fc3_hero_emy_weight"
        string_val: "hero_share/fc3_hero_frd_bias"
        string_val: "hero_share/fc3_hero_frd_weight"
        string_val: "organ_share/fc1_organ_bias"
        string_val: "organ_share/fc1_organ_weight"
        string_val: "organ_share/fc2_organ_bias"
        string_val: "organ_share/fc2_organ_weight"
        string_val: "organ_share/fc3_organ_1_bias"
        string_val: "organ_share/fc3_organ_1_weight"
        string_val: "organ_share/fc3_organ_2_bias"
        string_val: "organ_share/fc3_organ_2_weight"
        string_val: "public_lstm/rnn/basic_lstm_cell/bias"
        string_val: "public_lstm/rnn/basic_lstm_cell/kernel"
        string_val: "public_weicao/fc_public_bias"
        string_val: "public_weicao/fc_public_weight"
        string_val: "soldier_share/fc1_soldier_bias"
        string_val: "soldier_share/fc1_soldier_weight"
        string_val: "soldier_share/fc2_soldier_bias"
        string_val: "soldier_share/fc2_soldier_weight"
        string_val: "soldier_share/fc3_soldier_1_bias"
        string_val: "soldier_share/fc3_soldier_1_weight"
        string_val: "soldier_share/fc3_soldier_2_bias"
        string_val: "soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 51
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "fc1_value/fc1_value_bias"
  input: "fc1_value/fc1_value_weight"
  input: "fc2_label_0/fc2_label_0_bias"
  input: "fc2_label_0/fc2_label_0_weight"
  input: "fc2_label_1/fc2_label_1_bias"
  input: "fc2_label_1/fc2_label_1_weight"
  input: "fc2_label_2/fc2_label_2_bias"
  input: "fc2_label_2/fc2_label_2_weight"
  input: "fc2_label_3/fc2_label_3_bias"
  input: "fc2_label_3/fc2_label_3_weight"
  input: "fc2_label_4/fc2_label_4_bias"
  input: "fc2_label_4/fc2_label_4_weight"
  input: "fc2_label_5/dense/kernel"
  input: "fc2_label_5/fc2_label_5_bias"
  input: "fc2_label_5/fc2_label_5_weight"
  input: "fc2_value/fc2_value_bias"
  input: "fc2_value/fc2_value_weight"
  input: "hero_main/fc1_hero_main_bias"
  input: "hero_main/fc1_hero_main_weight"
  input: "hero_main/fc2_hero_main_bias"
  input: "hero_main/fc2_hero_main_weight"
  input: "hero_main/fc3_hero_main_bias"
  input: "hero_main/fc3_hero_main_weight"
  input: "hero_share/fc1_hero_bias"
  input: "hero_share/fc1_hero_weight"
  input: "hero_share/fc2_hero_bias"
  input: "hero_share/fc2_hero_weight"
  input: "hero_share/fc3_hero_emy_bias"
  input: "hero_share/fc3_hero_emy_weight"
  input: "hero_share/fc3_hero_frd_bias"
  input: "hero_share/fc3_hero_frd_weight"
  input: "organ_share/fc1_organ_bias"
  input: "organ_share/fc1_organ_weight"
  input: "organ_share/fc2_organ_bias"
  input: "organ_share/fc2_organ_weight"
  input: "organ_share/fc3_organ_1_bias"
  input: "organ_share/fc3_organ_1_weight"
  input: "organ_share/fc3_organ_2_bias"
  input: "organ_share/fc3_organ_2_weight"
  input: "public_lstm/rnn/basic_lstm_cell/bias"
  input: "public_lstm/rnn/basic_lstm_cell/kernel"
  input: "public_weicao/fc_public_bias"
  input: "public_weicao/fc_public_weight"
  input: "soldier_share/fc1_soldier_bias"
  input: "soldier_share/fc1_soldier_weight"
  input: "soldier_share/fc2_soldier_bias"
  input: "soldier_share/fc2_soldier_weight"
  input: "soldier_share/fc3_soldier_1_bias"
  input: "soldier_share/fc3_soldier_1_weight"
  input: "soldier_share/fc3_soldier_2_bias"
  input: "soldier_share/fc3_soldier_2_weight"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 51
          }
        }
        string_val: "fc1_value/fc1_value_bias"
        string_val: "fc1_value/fc1_value_weight"
        string_val: "fc2_label_0/fc2_label_0_bias"
        string_val: "fc2_label_0/fc2_label_0_weight"
        string_val: "fc2_label_1/fc2_label_1_bias"
        string_val: "fc2_label_1/fc2_label_1_weight"
        string_val: "fc2_label_2/fc2_label_2_bias"
        string_val: "fc2_label_2/fc2_label_2_weight"
        string_val: "fc2_label_3/fc2_label_3_bias"
        string_val: "fc2_label_3/fc2_label_3_weight"
        string_val: "fc2_label_4/fc2_label_4_bias"
        string_val: "fc2_label_4/fc2_label_4_weight"
        string_val: "fc2_label_5/dense/kernel"
        string_val: "fc2_label_5/fc2_label_5_bias"
        string_val: "fc2_label_5/fc2_label_5_weight"
        string_val: "fc2_value/fc2_value_bias"
        string_val: "fc2_value/fc2_value_weight"
        string_val: "hero_main/fc1_hero_main_bias"
        string_val: "hero_main/fc1_hero_main_weight"
        string_val: "hero_main/fc2_hero_main_bias"
        string_val: "hero_main/fc2_hero_main_weight"
        string_val: "hero_main/fc3_hero_main_bias"
        string_val: "hero_main/fc3_hero_main_weight"
        string_val: "hero_share/fc1_hero_bias"
        string_val: "hero_share/fc1_hero_weight"
        string_val: "hero_share/fc2_hero_bias"
        string_val: "hero_share/fc2_hero_weight"
        string_val: "hero_share/fc3_hero_emy_bias"
        string_val: "hero_share/fc3_hero_emy_weight"
        string_val: "hero_share/fc3_hero_frd_bias"
        string_val: "hero_share/fc3_hero_frd_weight"
        string_val: "organ_share/fc1_organ_bias"
        string_val: "organ_share/fc1_organ_weight"
        string_val: "organ_share/fc2_organ_bias"
        string_val: "organ_share/fc2_organ_weight"
        string_val: "organ_share/fc3_organ_1_bias"
        string_val: "organ_share/fc3_organ_1_weight"
        string_val: "organ_share/fc3_organ_2_bias"
        string_val: "organ_share/fc3_organ_2_weight"
        string_val: "public_lstm/rnn/basic_lstm_cell/bias"
        string_val: "public_lstm/rnn/basic_lstm_cell/kernel"
        string_val: "public_weicao/fc_public_bias"
        string_val: "public_weicao/fc_public_weight"
        string_val: "soldier_share/fc1_soldier_bias"
        string_val: "soldier_share/fc1_soldier_weight"
        string_val: "soldier_share/fc2_soldier_bias"
        string_val: "soldier_share/fc2_soldier_weight"
        string_val: "soldier_share/fc3_soldier_1_bias"
        string_val: "soldier_share/fc3_soldier_1_weight"
        string_val: "soldier_share/fc3_soldier_2_bias"
        string_val: "soldier_share/fc3_soldier_2_weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 51
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "fc1_value/fc1_value_bias"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "fc1_value/fc1_value_weight"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1_value/fc1_value_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fc2_label_0/fc2_label_0_bias"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fc2_label_0/fc2_label_0_weight"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_0/fc2_label_0_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fc2_label_1/fc2_label_1_bias"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fc2_label_1/fc2_label_1_weight"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_1/fc2_label_1_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fc2_label_2/fc2_label_2_bias"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fc2_label_2/fc2_label_2_weight"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_2/fc2_label_2_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fc2_label_3/fc2_label_3_bias"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fc2_label_3/fc2_label_3_weight"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_3/fc2_label_3_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fc2_label_4/fc2_label_4_bias"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fc2_label_4/fc2_label_4_weight"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_4/fc2_label_4_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fc2_label_5/dense/kernel"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fc2_label_5/fc2_label_5_bias"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "fc2_label_5/fc2_label_5_weight"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_label_5/fc2_label_5_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "fc2_value/fc2_value_bias"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "fc2_value/fc2_value_weight"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2_value/fc2_value_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "hero_main/fc1_hero_main_bias"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "hero_main/fc1_hero_main_weight"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc1_hero_main_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "hero_main/fc2_hero_main_bias"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "hero_main/fc2_hero_main_weight"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc2_hero_main_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "hero_main/fc3_hero_main_bias"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "hero_main/fc3_hero_main_weight"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_main/fc3_hero_main_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "hero_share/fc1_hero_bias"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "hero_share/fc1_hero_weight"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc1_hero_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "hero_share/fc2_hero_bias"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "hero_share/fc2_hero_weight"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc2_hero_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "hero_share/fc3_hero_emy_bias"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "hero_share/fc3_hero_emy_weight"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_emy_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "hero_share/fc3_hero_frd_bias"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "hero_share/fc3_hero_frd_weight"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hero_share/fc3_hero_frd_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "organ_share/fc1_organ_bias"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "organ_share/fc1_organ_weight"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc1_organ_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "organ_share/fc2_organ_bias"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "organ_share/fc2_organ_weight"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc2_organ_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "organ_share/fc3_organ_1_bias"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "organ_share/fc3_organ_1_weight"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_1_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "organ_share/fc3_organ_2_bias"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "organ_share/fc3_organ_2_weight"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@organ_share/fc3_organ_2_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "public_lstm/rnn/basic_lstm_cell/bias"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "public_lstm/rnn/basic_lstm_cell/kernel"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_lstm/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "public_weicao/fc_public_bias"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "public_weicao/fc_public_weight"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@public_weicao/fc_public_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "soldier_share/fc1_soldier_bias"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "soldier_share/fc1_soldier_weight"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc1_soldier_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "soldier_share/fc2_soldier_bias"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "soldier_share/fc2_soldier_weight"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc2_soldier_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "soldier_share/fc3_soldier_1_bias"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "soldier_share/fc3_soldier_1_weight"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_1_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "soldier_share/fc3_soldier_2_bias"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "soldier_share/fc3_soldier_2_weight"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@soldier_share/fc3_soldier_2_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "init"
  op: "NoOp"
  input: "^fc1_value/fc1_value_bias/Assign"
  input: "^fc1_value/fc1_value_weight/Assign"
  input: "^fc2_label_0/fc2_label_0_bias/Assign"
  input: "^fc2_label_0/fc2_label_0_weight/Assign"
  input: "^fc2_label_1/fc2_label_1_bias/Assign"
  input: "^fc2_label_1/fc2_label_1_weight/Assign"
  input: "^fc2_label_2/fc2_label_2_bias/Assign"
  input: "^fc2_label_2/fc2_label_2_weight/Assign"
  input: "^fc2_label_3/fc2_label_3_bias/Assign"
  input: "^fc2_label_3/fc2_label_3_weight/Assign"
  input: "^fc2_label_4/fc2_label_4_bias/Assign"
  input: "^fc2_label_4/fc2_label_4_weight/Assign"
  input: "^fc2_label_5/dense/kernel/Assign"
  input: "^fc2_label_5/fc2_label_5_bias/Assign"
  input: "^fc2_label_5/fc2_label_5_weight/Assign"
  input: "^fc2_value/fc2_value_bias/Assign"
  input: "^fc2_value/fc2_value_weight/Assign"
  input: "^hero_main/fc1_hero_main_bias/Assign"
  input: "^hero_main/fc1_hero_main_weight/Assign"
  input: "^hero_main/fc2_hero_main_bias/Assign"
  input: "^hero_main/fc2_hero_main_weight/Assign"
  input: "^hero_main/fc3_hero_main_bias/Assign"
  input: "^hero_main/fc3_hero_main_weight/Assign"
  input: "^hero_share/fc1_hero_bias/Assign"
  input: "^hero_share/fc1_hero_weight/Assign"
  input: "^hero_share/fc2_hero_bias/Assign"
  input: "^hero_share/fc2_hero_weight/Assign"
  input: "^hero_share/fc3_hero_emy_bias/Assign"
  input: "^hero_share/fc3_hero_emy_weight/Assign"
  input: "^hero_share/fc3_hero_frd_bias/Assign"
  input: "^hero_share/fc3_hero_frd_weight/Assign"
  input: "^organ_share/fc1_organ_bias/Assign"
  input: "^organ_share/fc1_organ_weight/Assign"
  input: "^organ_share/fc2_organ_bias/Assign"
  input: "^organ_share/fc2_organ_weight/Assign"
  input: "^organ_share/fc3_organ_1_bias/Assign"
  input: "^organ_share/fc3_organ_1_weight/Assign"
  input: "^organ_share/fc3_organ_2_bias/Assign"
  input: "^organ_share/fc3_organ_2_weight/Assign"
  input: "^public_lstm/rnn/basic_lstm_cell/bias/Assign"
  input: "^public_lstm/rnn/basic_lstm_cell/kernel/Assign"
  input: "^public_weicao/fc_public_bias/Assign"
  input: "^public_weicao/fc_public_weight/Assign"
  input: "^soldier_share/fc1_soldier_bias/Assign"
  input: "^soldier_share/fc1_soldier_weight/Assign"
  input: "^soldier_share/fc2_soldier_bias/Assign"
  input: "^soldier_share/fc2_soldier_weight/Assign"
  input: "^soldier_share/fc3_soldier_1_bias/Assign"
  input: "^soldier_share/fc3_soldier_1_weight/Assign"
  input: "^soldier_share/fc3_soldier_2_bias/Assign"
  input: "^soldier_share/fc3_soldier_2_weight/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^fc1_value/fc1_value_bias/Assign"
  input: "^fc1_value/fc1_value_weight/Assign"
  input: "^fc2_label_0/fc2_label_0_bias/Assign"
  input: "^fc2_label_0/fc2_label_0_weight/Assign"
  input: "^fc2_label_1/fc2_label_1_bias/Assign"
  input: "^fc2_label_1/fc2_label_1_weight/Assign"
  input: "^fc2_label_2/fc2_label_2_bias/Assign"
  input: "^fc2_label_2/fc2_label_2_weight/Assign"
  input: "^fc2_label_3/fc2_label_3_bias/Assign"
  input: "^fc2_label_3/fc2_label_3_weight/Assign"
  input: "^fc2_label_4/fc2_label_4_bias/Assign"
  input: "^fc2_label_4/fc2_label_4_weight/Assign"
  input: "^fc2_label_5/dense/kernel/Assign"
  input: "^fc2_label_5/fc2_label_5_bias/Assign"
  input: "^fc2_label_5/fc2_label_5_weight/Assign"
  input: "^fc2_value/fc2_value_bias/Assign"
  input: "^fc2_value/fc2_value_weight/Assign"
  input: "^hero_main/fc1_hero_main_bias/Assign"
  input: "^hero_main/fc1_hero_main_weight/Assign"
  input: "^hero_main/fc2_hero_main_bias/Assign"
  input: "^hero_main/fc2_hero_main_weight/Assign"
  input: "^hero_main/fc3_hero_main_bias/Assign"
  input: "^hero_main/fc3_hero_main_weight/Assign"
  input: "^hero_share/fc1_hero_bias/Assign"
  input: "^hero_share/fc1_hero_weight/Assign"
  input: "^hero_share/fc2_hero_bias/Assign"
  input: "^hero_share/fc2_hero_weight/Assign"
  input: "^hero_share/fc3_hero_emy_bias/Assign"
  input: "^hero_share/fc3_hero_emy_weight/Assign"
  input: "^hero_share/fc3_hero_frd_bias/Assign"
  input: "^hero_share/fc3_hero_frd_weight/Assign"
  input: "^organ_share/fc1_organ_bias/Assign"
  input: "^organ_share/fc1_organ_weight/Assign"
  input: "^organ_share/fc2_organ_bias/Assign"
  input: "^organ_share/fc2_organ_weight/Assign"
  input: "^organ_share/fc3_organ_1_bias/Assign"
  input: "^organ_share/fc3_organ_1_weight/Assign"
  input: "^organ_share/fc3_organ_2_bias/Assign"
  input: "^organ_share/fc3_organ_2_weight/Assign"
  input: "^public_lstm/rnn/basic_lstm_cell/bias/Assign"
  input: "^public_lstm/rnn/basic_lstm_cell/kernel/Assign"
  input: "^public_weicao/fc_public_bias/Assign"
  input: "^public_weicao/fc_public_weight/Assign"
  input: "^soldier_share/fc1_soldier_bias/Assign"
  input: "^soldier_share/fc1_soldier_weight/Assign"
  input: "^soldier_share/fc2_soldier_bias/Assign"
  input: "^soldier_share/fc2_soldier_weight/Assign"
  input: "^soldier_share/fc3_soldier_1_bias/Assign"
  input: "^soldier_share/fc3_soldier_1_weight/Assign"
  input: "^soldier_share/fc3_soldier_2_bias/Assign"
  input: "^soldier_share/fc3_soldier_2_weight/Assign"
}
versions {
  producer: 38
}
